# Create VPC
aws ec2 create-vpc --cidr-block 10.0.0.0/16 --query 'Vpc.{VpcId:VpcId}' --output text

# Create Subnet
aws ec2 create-subnet --vpc-id $AWS_VPC --cidr-block 10.0.1.0/24 --availability-zone eu-central-1a --query 'Subnet.{SubnetId:SubnetId}' --output text

# Create 2nd Subnet
aws ec2 create-subnet --vpc-id $AWS_VPC --cidr-block 10.0.2.0/24 --availability-zone eu-central-1a --query 'Subnet.{SubnetId:SubnetId}' --output text

# Create Tags for subnets
aws ec2 create-tags --resources $AWS_PUBLIC_SUBNET --tags Key=Name,Value=DevOpsPublicSubnet

aws ec2 create-tags --resources $AWS_PRIVATE_SUBNET --tags Key=Name,Value=DevOpsPrivateSubnet

# Modify subnet attribute
aws ec2 modify-subnet-attribute --subnet-id $AWS_PUBLIC_SUBNET --map-public-ip-on-launch

# Create Internet Gateway
aws ec2 create-internet-gateway --query 'InternetGateway.{InternetGatewayId:InternetGatewayId}' --output text

# Create Tags for Internet gateway
aws ec2 create-tags --resources $AWS_INTERNET_GATEWAY --tags Key=Name,Value=DevOpsInternetGateway

# Attach internet gateway
aws ec2 attach-internet-gateway --vpc-id $AWS_VPC --internet-gateway-id $AWS_INTERNET_GATEWAY --query 'InternetGateway.{InternetGatewayId:InternetGatewayId}' --output text

# Create Route Table
aws ec2 create-route-table --vpc-id $AWS_VPC --query 'RouteTable.{RouteTableId:RouteTableId}' --output text

# Tag Route Table with a name
aws ec2 create-tags --resources $AWS_ROUTE_TABLE --tags Key=Name,Value=DevOpsRouteTable

# Get Elastic Ip
aws ec2 allocate-address --domain vpc --query 'AllocationId' --output text

# Create a NAT gateway in public subnet
aws ec2 create-nat-gateway --subnet-id $AWS_PUBLIC_SUBNET --allocation-id $AWS_ELASTIC_IP --query 'NatGateway.{NatGatewayId:NatGatewayId}' --output text

# Tag NAT gateway
aws ec2 create-tags --resources $AWS_NAT_GATEWAY --tags Key=Name,Value=DevOpsNATGateway

# Create a custom route table association for Public Subnet
aws ec2 associate-route-table --route-table-id $AWS_ROUTE_TABLE --subnet-id $AWS_PUBLIC_SUBNET --output text

# Associate the subnet with route table, making it public subnet
aws ec2 create-route --route-table-id $AWS_ROUTE_TABLE --destination-cidr-block 0.0.0.0/0 --gateway-id $AWS_INTERNET_GATEWAY

# Associate the NAT gateway with route table, making it a private subnet
aws ec2 create-route --route-table-id $AWS_ROUTE_TABLE --destination-cidr-block 10.2.0.0/24 --nat-gateway-id $AWS_NAT_GATEWAY
